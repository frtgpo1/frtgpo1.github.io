{"version":3,"sources":["components/Cards/PersonCard.js","components/Cards/PersonCardList.js","components/SearchBox.js","components/Data/persons.js","registerServiceWorker.js","containers/App.js","components/Data/tiles.js","components/Cards/TileCard.js","components/Cards/TileCardList.js","containers/MainMenu.js","index.js"],"names":["PersonCard","firstName","lastName","className","alt","src","height","width","PersonCardList","persons","map","user","i","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","birthday","Date","community","isLocalhost","Component","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","tiles","tileName","TileCard","clickEvent","onClick","TileCardList","tileCards","MainMenu","alert","this","setState","length","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.178159c0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst PersonCard = ({ firstName, lastName }) => {\r\n  return (\r\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5'>\r\n      <img alt='robots' src={`https://imgr.search.brave.com/9qLEmDG93EU-VN7n0-aEGxZGmRRacno1nGOy_BGFQmM/fit/600/600/no/1/aHR0cHM6Ly91cGxv/YWQud2lraW1lZGlh/Lm9yZy93aWtpcGVk/aWEvY29tbW9ucy90/aHVtYi9hL2FmL1Np/bXBsZWljb25zX0lu/dGVyZmFjZV91c2Vy/LW1hbGUtYmxhY2st/c2lsaG91ZXR0ZS5z/dmcvNjAwcHgtU2lt/cGxlaWNvbnNfSW50/ZXJmYWNlX3VzZXIt/bWFsZS1ibGFjay1z/aWxob3VldHRlLnN2/Zy5wbmc`} height=\"200px\" width=\"200px\" />\r\n      <div>\r\n        <p>{firstName} {lastName}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonCard;\r\n","import React from 'react';\r\nimport PersonCard from './PersonCard';\r\n\r\nconst PersonCardList = ({ persons }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        persons.map((user, i) => {\r\n          return (\r\n            <PersonCard\r\n              key={i}\r\n              firstName={persons[i].firstName}\r\n              lastName={persons[i].lastName}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PersonCardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n  return (\r\n    <div className='pa2'>\r\n      <input\r\n        className='pa3 ba b--green bg-lightest-blue'\r\n        type='search'\r\n        placeholder='suchen..'\r\n        onChange={searchChange}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SearchBox;","export const persons = [\r\n    {\r\n        firstName: \"Olaf\",\r\n        lastName: \"Egbers\",\r\n        birthday: new Date(1989, 2, 9),\r\n        community: \"Go&Change\"\r\n    },\r\n    {\r\n        firstName: \"Estherina\",\r\n        lastName: \"De Stefano\",\r\n        birthday: new Date(1989, 2, 9),\r\n        community: \"Go&Change\"\r\n    },\r\n    {\r\n        firstName: \"Bethy\",\r\n        lastName: \"RÃ¼lke\",\r\n        birthday: new Date(1989, 2, 9),\r\n        community: \"Go&Change\"\r\n    },\r\n    {\r\n        firstName: \"Joshua\",\r\n        lastName: \"TO DO\",\r\n        birthday: new Date(1989, 2, 9),\r\n        community: \"Go&Change\"\r\n    },\r\n    {\r\n        firstName: \"Jonas\",\r\n        lastName: \"Berkenheide\",\r\n        birthday: new Date(1989, 2, 9),\r\n        community: \"Go&Change\"\r\n    },\r\n    {\r\n        firstName: \"Lenni\",\r\n        lastName: \"Tamm\",\r\n        birthday: new Date(1989, 2, 9),\r\n        community: \"Go&Change\"\r\n    }\r\n]","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PersonCardList from '../components/Cards/PersonCardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport '../components/Data/persons.js'\r\nimport { persons } from '../components/Data/persons.js';\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      persons: [],\r\n      searchfield: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.setState({persons: persons});\r\n  }\r\n\r\n  onSearchChange = (event) => {\r\n    this.setState({ searchfield: event.target.value })\r\n  }\r\n\r\n  render() {\r\n    const { searchfield, persons } = this.state;\r\n    const filteredPersons = persons.filter(person =>{\r\n      return person.firstName.toLowerCase().includes(searchfield.toLowerCase());\r\n    })\r\n    return !persons.length ?\r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <h1 className='f1'>GacGug Gang</h1>\r\n          <SearchBox searchChange={this.onSearchChange}/>\r\n          <PersonCardList persons={filteredPersons} />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default App;","export const tiles = [\r\n    {\r\n        tileName: \"News\",\r\n    },\r\n    {\r\n        tileName: \"Kinderbetreuung\",\r\n    },\r\n    {\r\n        tileName: \"Sex Verstrickungen\",\r\n    },\r\n    {\r\n        tileName: \"Projekte\",\r\n    },\r\n    {\r\n        tileName: \"Geburtstagsgruppen\",\r\n    }\r\n]","import React from 'react';\r\n\r\nconst TileCard = ({ tileName, clickEvent }) => {\r\n  return (\r\n    <div className='tc grow bg-light-green br3 pa3 ma2 dib bw2 shadow-5' onClick={clickEvent}>\r\n      <img alt='robots' src={`https://imgr.search.brave.com/K8a1EpwJcvod8iYwcrYzH1QftHGS_-M-y6mAR287Xdc/fit/512/512/no/1/aHR0cHM6Ly9pbWFn/ZXMudmV4ZWxzLmNv/bS9tZWRpYS91c2Vy/cy8zLzEyNjYyMy9p/c29sYXRlZC9wcmV2/aWV3LzRmMDdmODVh/Mzc1OTIwZThmNjEy/MzM0MWY2NDVlZDIw/LXRyaXNrZWxpb24t/aWNvbm8tYnVkaXN0/YS1ieS12ZXhlbHMu/cG5n`} height=\"200px\" width=\"200px\" />\r\n      <div>\r\n        <p>{tileName}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TileCard;\r\n","import React from 'react';\r\nimport TileCard from './TileCard';\r\n\r\nconst TileCardList = ({ tileCards, clickEvent }) => {\r\n  return (\r\n    <div>\r\n      {\r\n        tileCards.map((user, i) => {\r\n          return (\r\n            <TileCard\r\n              key={i}\r\n              tileName={tileCards[i].tileName}\r\n              clickEvent={clickEvent}\r\n              />\r\n          );\r\n        })\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TileCardList;","import React, { Component } from 'react';\r\nimport PersonCardList from '../components/Cards/PersonCardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport './App.css';\r\nimport '../components/Data/persons.js'\r\nimport { tiles } from '../components/Data/tiles';\r\nimport TileCardList from '../components/Cards/TileCardList';\r\n\r\nclass MainMenu extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      tiles: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n      this.setState({tiles: tiles});\r\n  }\r\n\r\n  clickEvent = () => {\r\n    alert(\"hello world\");\r\n  }\r\n\r\n  render() {\r\n    const { tiles } = this.state;\r\n    return !tiles.length ?\r\n      <h1>Loading</h1> :\r\n      (\r\n        <div className='tc'>\r\n          <h1 className='f1'>Main Menu</h1>\r\n          <TileCardList tileCards={tiles} clickEvent={this.clickEvent} />\r\n        </div>\r\n      );\r\n  }\r\n}\r\n\r\nexport default MainMenu;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\nimport 'tachyons'; \r\nimport MainMenu from './containers/MainMenu';\r\n\r\nReactDOM.render(<MainMenu />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}